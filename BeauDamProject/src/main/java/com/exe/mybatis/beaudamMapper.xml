<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="beaudam">
	
	<!-- Insert -->	
	
		<!-- Member -->
			<insert id="insertMember" parameterType="com.table.memberDTO.MemberDTO">
				insert into member (id,pwd,nickName) values (#{id},#{pwd},#{nickName})	
			</insert>
			
			<insert id="insertMemberInfo" parameterType="com.table.memberDTO.Member_InfoDTO">
				insert into member_Info (id,name,birth,tel,cellphone,zip,city,street,email,gender) 
				values (#{id},#{name},#{birth},#{tel},#{cellphone},#{zip},#{city},#{street},#{email},#{gender})
			</insert>
			
			<insert id="insertMemberInfoEX" parameterType="com.table.memberDTO.Member_InfoDTO">
				insert into member_Info (id,name,birth,cellphone,zip,city,street,email,gender) 
				values (#{id},#{name},#{birth},#{cellphone},#{zip},#{city},#{street},#{email},#{gender})
			</insert>
			
			<insert id="insertMemberGrade" parameterType="com.table.memberDTO.Member_GradeDTO">
				insert into member_Grade (id) values (#{id})
			</insert>
			
		<!-- Coupon -->
			<insert id="insertCoupon" parameterType="com.table.otherDTO.CouponDTO">
				insert into coupon (id, coupon) values (#{id},#{coupon})
			</insert>	
		
		
		<!-- Product -->
			<insert id="insertProduct" parameterType="com.table.productDTO.ProductDTO">
				insert into product (code,product_Name,product_Price) values (#{code},#{product_Name},#{product_Price})
			</insert>
			
			<insert id="insertBrand" parameterType="com.table.productDTO.BrandDTO">
				insert into brand (code,brand,type,category) values (#{code},#{brand},#{type},#{category})
			</insert>
			
			<insert id="insertImg" parameterType="com.table.productDTO.ImgDTO">
				insert into img (code, thumb_Img, detail_Img) values (#{code}, #{thumb_Img}, #{detail_Img})
			</insert>
			<insert id="insertColor" parameterType="com.table.productDTO.ColorDTO">
				insert into color (color_Code, code, color_Name, qty) values (#{color_Code}, #{code}, #{color_Name}, #{qty})
			</insert>	
			
		
		<!-- Sale -->
			<insert id="insertSaleDate" parameterType="com.table.saleDTO.Sale_DateDTO">
				insert into sale_date 
				(sale_code,payment_method,use_coupon,use_point,total_price)
				values
				(#{sale_Code},#{payment_Method},#{use_Coupon},#{use_Point},#{total_Price})
			</insert>
			
			<insert id="insertSaleProduct" parameterType="com.table.saleDTO.Sale_ProductDTO">
				insert into sale_product (sale_code,code,brand,product_name,product_price,color_code,qty) values
				(#{sale_Code},#{code},#{brand},#{product_Name},#{product_Price},#{color_Code},#{qty})
			</insert>
						
			<insert id="insertSaleClient" parameterType="com.table.saleDTO.Sale_ClientDTO">
				insert into sale_client (sale_code,id,name,tel,cellphone,addr,message) values
				(#{sale_Code},#{id},#{name},#{tel},#{cellphone},#{addr},#{message})
			</insert>	
		
			
		<!-- Notification -->
			<insert id="insertNotification" parameterType="com.table.otherDTO.NotificationDTO">
				insert into notification (num,subject,content) values (#{num},#{subject},#{content})
			</insert>
		
		
		<!-- Review -->
			<insert id="insertReview" parameterType="com.table.otherDTO.ReviewDTO">
				insert into review (sale_code, score, review) values (#{sale_code}, #{score}, #{review})
			</insert>
			
			
		<!-- Basket -->
			<insert id="insertBasket" parameterType="com.table.otherDTO.BasketDTO">
				insert into basket (basket_num,id,code,color_code,product_name,product_price,qty) values
				(#{basket_Num},#{id},#{code},#{color_Code},#{product_Name},#{product_Price},#{qty})
			</insert>
		
		
		<!-- Admin -->
			<insert id="insertAdminBrand" parameterType="com.table.adminDTO.Admin_BrandDTO">
				insert into admin_brand values (#{brand})
			</insert>			
			<insert id="insertAdminCategory" parameterType="com.table.adminDTO.Admin_CategoryDTO">
				insert into admin_category values (#{category})
			</insert>		
			<insert id="insertAdminType" parameterType="com.table.adminDTO.Admin_TypeDTO">
				insert into admin_type (type, category) values (#{type}, #{category})
			</insert>		
		
		
		<!-- best item -->
		<select id="getBestItems" resultType="com.view.view.SaleView">
		<![CDATA[
			select * from ( select rownum rnum, data.* from (select code, sum(qty) qty from saleview group by code order by qty desc) data) where rnum <=5
		]]>
		</select>
		
		
	
	<!-- Update -->
	
	
	
		<!-- Member -->
			<!-- 회원정보 수정 -->
			<update id="updateMember" parameterType="com.table.memberDTO.MemberDTO">
				update member set nickName = #{nickName}, pwd = #{pwd} where id = #{id}
			</update>
			
			<update id="updateMemberInfo" parameterType="com.table.memberDTO.Member_InfoDTO">
				update member_Info set birth = #{birth}, zip = #{zip}, city = #{city}, street = #{street},
				tel = #{tel}, cellphone = #{cellphone}, email = #{email}, gender = #{gender} where id = #{id}
			</update>
			
			<update id="updateMemberInfoEX" parameterType="com.table.memberDTO.Member_InfoDTO">
				update member_Info set birth = #{birth}, zip = #{zip}, city = #{city}, street = #{street},
				cellphone = #{cellphone}, email = #{email}, gender = #{gender} where id = #{id}
			</update>
			
			<!-- 탈퇴처리 -->			
			<update id="updateIsLeave" parameterType="String">
				update member set isLeave = 1 where id = #{id}
			</update>
			
			<update id="updateMemberGrade" parameterType="com.table.memberDTO.Member_GradeDTO">
				update member_grade set pay = #{pay}, grade = #{grade}, point = #{point} where id = #{id}
			</update>
			
			
			
		<!-- Product -->
			<!-- 상품수정 -->
			<update id="updateProduct" parameterType="com.table.productDTO.ProductDTO">
				update product set product_name = #{product_Name}, product_price = #{product_Price} where code = #{code}
			</update>
			
			<update id="updateBrand" parameterType="com.table.productDTO.BrandDTO">
				update brand set brand=#{brand},category=#{category},type=#{type} where code=#{code}
			</update>
			<update id="updateImg" parameterType="com.table.productDTO.ImgDTO">
				update img set thumb_img=#{thumb_Img},detail_img=#{detail_Img} where code = #{code}
			</update>
			<update id="updateColor" parameterType="com.table.productDTO.ColorDTO">
				update color set color_code=#{color_Code},color_name=#{color_Name},qty=#{qty} where code = #{code}
			</update>
			
			<update id="updateQty" parameterType="map">
				update color set qty = #{qty} where code = #{code}
			</update>
			
		<!-- Admin -->
			
			
		<!-- Sale -->
			
			<!-- 결제상태, 배송상태 수정 -->			
			<update id="updateSaleDate" parameterType="com.view.view.SaleView">
				update sale_date set pay_status=#{pay_Status},delivery_status=#{delivery_Status} where sale_code = #{sale_Code}
			</update>					
			
		<!-- Coupon -->
			<update id="updateCoupon" parameterType="int">
				update coupon set usedate = sysdate where num = #{num}
			</update>
			
		<!-- Notification -->
			<update id="updateHitCount" parameterType="int">
				update notification set hitCount = hitCount + 1 where num = #{num}
			</update>
			
			<update id="updateNotification" parameterType="com.table.otherDTO.NotificationDTO" >
				update notification set subject=#{subject},content=#{content} where num=#{num}
			</update>
				
		
	
	<!-- Delete -->

		<!-- Product -->
		<delete id="deleteProduct" parameterType="String">
			delete product where code = #{code}
		</delete>
		
		<delete id="deleteBrand" parameterType="String">
			delete brand where code = #{code}
		</delete>
		<delete id="deleteColor" parameterType="String">
			delete color where code = #{code}
		</delete>
		<delete id="deleteImg" parameterType="String">
			delete img where code = #{code}
		</delete>
		
		<!-- Admin -->
		<delete id="deleteAdminBrand" parameterType="String">
			delete admin_brand where brand = #{brand}
		</delete>
		<delete id="deleteAdminCategory" parameterType="String">
			delete admin_category where category = #{category}
		</delete>
		<delete id="deleteAdminCateType" parameterType="String">
			delete admin_type where category = #{category}
		</delete>
		<delete id="deleteAdminType" parameterType="String">
			delete admin_type where type = #{type}
		</delete>
		
		
		
		<!-- Basket -->
		<delete id="deleteBasket" parameterType="map">
			delete basket where basket_num = #{basket_Num} and id = #{id}
		</delete>
		<delete id="deleteAllBasket" parameterType="String">
			delete basket where id = #{id}
		</delete>	
			
			
		<!-- Review -->		
		<delete id="deleteReview" parameterType="int">
			delete review where num = #{num}
		</delete>
		
		<!-- Notification -->
		<delete id="deleteNotification" parameterType="int">
			delete notification where num = #{num}			
		</delete>
	
		<!-- Member -->
		<delete id="deleteMemberGrade" parameterType="String">
			delete member_grade where id = #{id}
		</delete>
		<delete id="deleteMember" parameterType="String">
			delete member where id = #{id}
		</delete>
		<delete id="deleteMemberInfo" parameterType="String">
			delete member_info where id = #{id}
		</delete>
		<delete id="deleteCoupon" parameterType="String">
			delete coupon where id = #{id}
		</delete>
		
		
	<!-- Select -->
	
		<!-- Member -->		
		<select id="getAllMemberData" resultType="com.view.view.MemberView">
			select id,pwd,name,nickName,cellPhone,tel,to_char(birth,'yyyy-mm-dd') birth,email,
			zip,city,street,gender,pay,grade,point,to_char(created,'yyyy-mm-dd') created, isLeave from memberView
		</select>
		
		<select id="getOneMemberData" resultType="com.view.view.MemberView" parameterType="String">
			select id,pwd,name,nickName,cellPhone,tel,to_char(birth,'yyyy-mm-dd') birth,email,
			zip,city,street,gender,pay,grade,point,to_char(created,'yyyy-mm-dd') created, isLeave from memberView
			where id = #{id}
		</select>
		
		<select id="getSearchId" resultType="String" parameterType="map">
			select id from memberView
			where name=#{name} and birth=#{birth}
		</select>
		
		<select id="getSearchPwd" resultType="String" parameterType="map">
			select pwd from memberView
			where id=#{id} and name=#{name} and email=#{email}
		</select>
		
		<select id="getLeaveMemberData" resultType="com.view.view.MemberView">
			select id,pwd,name,nickName,cellPhone,tel,to_char(birth,'yyyy-mm-dd') birth,email,
			zip,city,street,gender,pay,grade,point,to_char(created,'yyyy-mm-dd') created, isLeave from memberView
			where isLeave = 1
		</select>
		
		<select id="getSearchMemberData" resultType="com.view.view.MemberView" parameterType="com.table.memberDTO.Member_InfoDTO">
			select ID,PWD,NAME,NICKNAME,CELLPHONE,TEL,to_char(birth,'yyyy-mm-dd') BIRTH,EMAIL,ZIP,CITY,STREET,GENDER,PAY,GRADE,POINT, to_char(created,'yyyy-mm-dd') CREATED,ISLEAVE from
			memberView where id = #{id} or upper(name) = upper(#{name}) or tel = #{tel} or cellphone = #{cellphone} or birth = #{birth} 
		</select>
		
		<!-- Product -->
		<select id="getAllProductData" resultType="com.view.view.ProductView" parameterType="map">
			select code,brand,category,type,product_Name,color_Code,color_Name,product_Price,thumb_Img,detail_Img,qty from productView
			where upper(code) = upper(#{code}) or  upper(brand) = upper(#{brand}) or  upper(category) = upper(#{category}) or upper(type) = upper(#{type}) or upper(product_Name) = upper(#{productName})		
		</select>	
		<select id="getProductList" resultType="com.view.view.ProductView">
			select code,brand,category,type,product_name,product_price,color_code,color_name,qty from productView
		</select>
		
		<select id="getOneProductData" resultType="com.view.view.ProductView" parameterType="String">
			select code,brand,category,type,product_Name,color_Code,color_Name,product_Price,thumb_Img,detail_Img,qty from productView
			where code=#{code}
		</select>
		
		<select id="getSearchProductDataList" resultType="com.view.view.ProductView" parameterType="map">
			select *from (
			select rownum rnum,data.*from (
			select code, brand, product_Name,product_Price,type,category, thumb_Img from productView
			where  product_Name like '%'||#{searchValue}||'%' and
			       type like '%'||#{searchType}||'%'			       
			order by code desc) data)
			<![CDATA[
	 			where rnum>=#{start} and rnum <=#{end} 
			]]>	 
		
		</select>
		
		<select id="getSearchProductList" resultType="com.view.view.ProductView" parameterType="map">
			select *from (
			select rownum rnum,data.*from (
			select code, brand, product_Name,product_Price,type,category, thumb_Img from productView
			where  product_Name like '%'||#{searchValue}||'%' and
			       type like '%'||#{searchType}||'%'			       
			        <if test="list != null">
			       and brand in
			       		<foreach item="list" index="index" collection="list" open="(" close=")" separator=",">
			      			#{list}
			      	 	</foreach>	
			       </if>
			order by code desc) data)
			<![CDATA[
 			where rnum>=#{start} and rnum <=#{end}
			]]>	
			
		</select>
		<select id="getSearchDataCount" resultType="int" parameterType="Map">
			select nvl(count(*),0) from productView 
			where  product_Name like '%'||#{searchValue}||'%' and
			       type like '%'||#{searchType}||'%'
			       <if test="list != null">
			       and brand in
			       		<foreach item="list" index="index" collection="list" open="(" close=")" separator=",">
			      			#{list}
			      	 	</foreach>	
			       </if>	       	
		</select>

		<select id="getProductDataRowNum" resultType="com.view.view.ProductView" parameterType="int">
			select *from (
			select rownum rnum,data.*from (
			select code,thumb_Img from productView
			order by code desc) data)
			<![CDATA[
			where rnum=#{selectRowNum}
			]]>
		</select>
				
		<!-- Admin -->
		<select id="getAdminBrand" resultType="com.table.adminDTO.Admin_BrandDTO">
			select brand from admin_brand
		</select>
		<select id="getAdminCategory" resultType="com.table.adminDTO.Admin_CategoryDTO">
			select category from admin_category
		</select>
		<select id="getAdminType" resultType="com.table.adminDTO.Admin_TypeDTO">
			select type from admin_type
		</select>
		<select id="getAdminTypeData" resultType="com.view.view.AdminView" parameterType="map">
			select type from admin_type where category = #{category}
		</select>
		
		<select id="getAdminDaySales" resultType="com.table.saleDTO.Sale_DateDTO">
			select to_char(saleDate,'day') saleDate, sum(total_Price) total_Price
			from sale_date 
			where to_char(saleDate,'ww')=to_char(sysDate,'ww') and to_char(saleDate,'yyyy')=to_char(sysdate,'yyyy')
			group by to_char(saleDate,'day')
			order by saleDate	asc		
		</select>
		
		<select id="getAdminMonthSales" resultType="com.table.saleDTO.Sale_DateDTO" parameterType="map">
			select to_char(saleDate,'mm') saleDate,sum(total_Price) as total_Price from sale_date
			where to_char(saleDate,'yyyy-mm')
			between #{yearSearchValue1} and #{yearSearchValue2}
			group by to_char(saleDate,'mm')
			order by saleDate asc
		</select> 	
		
		
		<select id="getAdminYearSales" resultType="com.table.saleDTO.Sale_DateDTO">
			select to_char(saleDate,'yyyy') saleDate, sum(total_Price) as total_Price from sale_date
			group by to_char(saleDate,'yyyy')
			order by saleDate desc 
		</select> 	
		
		<select id="getSalesYears" resultType="com.table.saleDTO.Sale_DateDTO">
			select to_char(saleDate,'yyyy') saleDate from sale_date group by to_char(saleDate,'yyyy')
			order by saleDate asc
		</select>
		
		
		
		
		<!-- Basket -->
		<select id="getBasketData" resultType="com.table.otherDTO.BasketDTO" parameterType="String">
			select a.basket_num, a.id, a.code, b.color_Name, a.color_code, a.product_name, a.product_price, a.qty, b.thumb_img, b.qty qty_Max, b.brand
			from basket a, productView b
			where a.id = #{id} and a.code = b.code
		</select>
		<select id="getBasketOneData" resultType="com.table.otherDTO.BasketDTO" parameterType="Map">
			select a.basket_num, a.id, a.code, b.color_Name, a.color_code, a.product_name, a.product_price, a.qty, b.thumb_img, b.qty qty_Max, b.brand
			from basket a, productView b
			where a.id = #{id} and a.code = b.code and a.basket_num = #{basket_Num}
		</select>
		
		
		
		
		<!-- Notification -->
		
		<select id="getNotificationMaxNum" resultType="int">
			select nvl(max(num),0) from notification
			
		</select>
		
		<select id="getNotificationRowNum" resultType="int">
			select max(rownum) rnum from notification
			
		</select>
		
		<select id="getNotificationAllData" parameterType="map" resultType="com.table.otherDTO.NotificationDTO">
			
			select *from (
			select rownum rnum,data.*from (
			select num,id,subject,content,hitCount,to_char(created,'YYYY-MM-DD') created from notification
			where ${searchKey} like '%' || #{searchValue} || '%' 
			order by num desc) data)
			<![CDATA[
			where rnum>=#{start} and rnum <=#{end}
			]]>			
		</select>
		
		<select id="getOneNotification" parameterType="int" resultType="com.table.otherDTO.NotificationDTO">
			select num,id,subject,content,hitCount,created from notification
			where num=#{num}
		</select>
		
		<select id="getNotificationCount" parameterType="map" resultType="int">
				select nvl(count(*),0) from notification where ${searchKey} like '%' || #{searchValue} || '%'	
		</select>
		
		
		
		
		<!-- Coupon -->
		<select id="getCouponCount" resultType="int" parameterType="String">
			select count(*) from coupon where id = #{id} and period > sysdate and not usedate like '%/%'
		</select>
		<select id="getCouponData" resultType="com.table.otherDTO.CouponDTO" parameterType="String">
			select num, id, coupon, to_char(period, 'yyyy-mm-dd') period, to_char(add_months(period, -1),'yyyy-mm-dd') begin from coupon
			where id = #{id} and period > sysdate and not usedate like '%/%'
		</select>		
		
		<select id="getWeekCouponCount" parameterType="String" resultType="int">
		<![CDATA[
			select count(*) from coupon
			where id = #{id} and trunc(period-sysdate) <= 7 and not usedate like '%/%'
		]]>
		</select>
		
		<select id="getWeekCouponData" parameterType="String" resultType="com.table.otherDTO.CouponDTO">
		<![CDATA[
			select id,coupon,period,usedate from coupon
			where id = #{id} and trunc(period-sysdate) <= 7	and not usedate like '%/%'
		]]>
		</select>		
		<select id="selectCouponData" parameterType="int" resultType="String">
			select coupon from coupon where num = #{num} and not usedate like '%/%'
		</select>
		
		<!-- Review -->
		<select id="getReviewData" parameterType="String" resultType="com.table.otherDTO.ReviewDTO">
			select sale_Code,score,review,created from review
			where sale_Code = #{sale_Code}
		</select>
		
		<!-- Sale -->
		<select id="getAllSaleData" resultType="com.view.view.SaleView" >
			select sale_Code,id,name,cellPhone,tel,code,brand,product_Name,color_Code, use_Coupon, payment_Method, addr, message, pay_Status, delivery_Status,
			 product_Price, qty, use_Point, total_Price, to_char(saledate, 'yyyy-mm-dd') saledate from saleView	
		</select>
		
		<select id="getOneSaleData" resultType="com.view.view.SaleView" parameterType="String">
			select sale_Code,id,name,cellPhone,tel,code,brand,product_Name,color_Code, use_Coupon, payment_Method, addr, message, pay_Status, delivery_Status,
			 product_Price, qty, use_Point, total_Price from saleView
			 where sale_Code=#{sale_Code}
		</select>
		
		<select id="getSearchSaleData" resultType="com.view.view.SaleView" parameterType="map">
			select sale_Code,id,name,cellPhone,tel,code,brand,product_Name,color_Code, use_Coupon, payment_Method, addr, message, pay_Status, delivery_Status,
			 product_Price, qty, use_Point, total_Price, to_char(saledate, 'yyyy-mm-dd') saledate from saleView			
			 where  name like '%' || #{searchName} || '%' and
				    id like '%' || #{searchId} || '%' and
				    cellPhone like '%' || #{searchCellPhone} || '%'
			order by sale_Code asc
		</select>
		<select id="getMaxSaleCode" resultType="String">
			select max(to_number(sale_code)) from saleview
		</select>
		
		<select id="getPersonalSaleData" parameterType="String" resultType="com.view.view.SaleView">
			select sale_Code,id,name,cellPhone,tel,code,brand,product_Name,color_Code,use_Coupon,payment_Method,addr,message,pay_Status,delivery_Status,
			product_Price,qty,use_Point,total_Price,to_char(saledate, 'yyyy-mm-dd') saleDate from saleView where id = #{id}
		</select>

</mapper>