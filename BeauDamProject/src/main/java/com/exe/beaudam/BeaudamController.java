package com.exe.beaudam;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.*;
import org.springframework.stereotype.*;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.servlet.ModelAndView;

import com.dao.otherDAO.OtherServiceImpl;
import com.table.otherDTO.BasketDTO;

/*
 *  1. method mapping을 다 기본적으로 get, post 모두 설정해뒀음
 *   -> 그냥 냅두지말고 필요에 따라 get, post, get/post 중 사용할 방식 선택해서 세팅할 것
 *   
 *  2. return 형식을 다 String을 기본으로 세팅
 *   -> ModelandView로 변환하여 사용해도 무방
 *  
 *  3. jsp파일은 각각 해당하는 폴더에 생성하기
 *   -> 해당 폴더는 컨트롤러에 *표시된 주석 참조
 *   -> views/해당폴더/~.jsp
 *   -> jsp파일명은 return값에 써져있는 이름과 똑같이 만들기
 *   
 *  4. 각자 맡은 페이지에 자신의 이름 주석 달아놓기
 *  
 *  5. image파일은 resources의 image의 해당하는 폴더에 맡은 페이지 폴더 생성하여 그 폴더에 넣을 것
 *   -> resources/image/해당 폴더(*표시)/폴더(페이지명)/~.jpg
 *   -> 폴더명은 3번과 같이 자신의 페이지명과 똑같이 할 것
 *   -> 이미지명은 어떤 용도의 이미지인지 알 수 있도록 지을 것
 *   
 *  6. css파일은 resources의 css의 해당하는 폴더에 맡은 페이지 폴더 생성하여 그 폴더에 넣을 것
 *   -> resources/css/해당 폴더(*표시)/폴더(페이지명)/~.css
 *   -> 폴더명은 3번과 같이 자신의 페이지명과 똑같이 할 것
 *   -> css명은 어떤 용도의 이미지인지 알 수 있도록 지을 것
 */

/*
 * 	쿼리 insert, delete 테이블 순서
 * 	
 * 	insert 할 때
 * 	member - member_Info - member_grade - coupon
 * 	product - brand - img - color - basket  
 * 	admin테이블 - brand
 * 	delete 할 때 insert 역순
 * 	
 * 
 * 	리뷰 delete 할 때 sale_code로 id 검증 후 삭제 시킬 것
 * 	
 * 	notification delete는 num만 있으면 삭제 되므로 관리자 계정일 때만
 * 	삭제버튼 활성화	
 * 
 * 	DB insert 필독
 * 	디폴트 값이 있어 추가하지 않아도 되는 데이터
 * 	
 * 	Member 관련 컬럼
 * 	- isLeave, created, pay, grade, point, num, period, use_date
 * 
 * 	Sale 관련 컬럼
 * 	- saleDate, pay_status, delivery_status
 * 
 * 	Notificaiton 관련 컬럼
 * 	- num, id, hitCount, created
 * 
 * 	Review 관련 컬럼
 *  - created  
 *
 *	DB update 필독
 *	파라미터 타입이 다들 다르니 사용 전 사용할 Mapper를 확인할 것
 *
 */
@Controller("BeaudamController")
public class BeaudamController {

	@Resource(name = "otherService")
	private OtherServiceImpl OtherService;

	// ********************** Beaudam Page **********************

	@RequestMapping(value = "/main.action", method = { RequestMethod.GET, RequestMethod.POST })
	public ModelAndView main(HttpSession session) {

		String id = (String) session.getAttribute("id");

		// 메인 페이지 이동
		return new ModelAndView("beaudam/main", "id", id);
	}

	@RequestMapping(value = "/productList.action", method = { RequestMethod.GET, RequestMethod.POST })
	public String productList() {

		// 상품리스트 페이지 이동
		return "beaudam/productList";
	}

	@RequestMapping(value = "/productDetail.action", method = { RequestMethod.GET, RequestMethod.POST })
	public String productDetail() {

		// 상품상세 페이지 이동
		return "beaudam/productDetail";
	}

	@RequestMapping(value = "/event.action", method = RequestMethod.GET)
	public String event() {

		// 이벤트 리스트 페이지 이동
		return "beaudam/event";
	}

	@RequestMapping(value = "/event1.action", method = RequestMethod.GET)
	public String event1() {

		// 이벤트1 페이지 이동
		return "beaudam/event1";

	}

	@RequestMapping(value = "/event2.action", method = RequestMethod.GET)
	public String event2() {
			
		// 이벤트2 페이지 이동
		return"beaudam/event2";
	}

	@RequestMapping(value = "/event3.action", method = RequestMethod.GET)
	public String event3() {
		
		// 이벤트3 페이지 이동
		return "beaudam/event3";
		
	}

	// msj
	@RequestMapping(value = "/pay.action", method = { RequestMethod.POST })
	public ModelAndView pay(HttpServletRequest request) {

		ModelAndView mav = new ModelAndView();

		String pay = request.getParameter("pay_ok");
		if (pay != null) {
			mav.setViewName("beaudam/payOk");

			// 결제완료 페이지 이동
			return mav;
		}

		mav.setViewName("beaudam/pay");

		// HttpSession session = request.getSession();
		// String id = (String) session.getAttribute("id");

		List<BasketDTO> lists = new ArrayList<BasketDTO>();
		Map<String, Object> hm = new HashMap<String, Object>();

		String id = "esteban"; // test Data
		hm.put("id", id);

		String check[] = request.getParameterValues("check");
		for (String s : check) {
			hm.put("basket_Num", s);
			BasketDTO dto = OtherService.getBasketOneData(hm);
			lists.add(dto);
		}

		mav.addObject("lists", lists);

		// 결제 페이지 이동
		return mav;
	}

}
